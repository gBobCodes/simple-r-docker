# DEVELOPMENT ENV ONLY. NOT PRODUCTION.
version: '3.7'

services:
  # R analysis app
  ranalysis:
    build: ./rapp
    command: R ${R_OPTIONS} "source('${MAIN_R_SCRIPT}')"
    volumes:
      - ./rapp/:/home/analysis
    env_file:
      - ./.env
    networks:
      - r-network
    # depends_on:
    #   - pdb
    
  # DB administration tool
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - ${DB_ADMIN_PORT}:8080
#     networks:
#       - r-network
  
  # Postgres DB Service
#   pdb:
#     image: postgres:12.0-alpine
#     restart: unless-stopped
#     volumes:
#       - r_postgres_data:/var/lib/postgresql/data/
#     environment:
#       - POSTGRES_USER=${SQL_USER}
#       - POSTGRES_PASSWORD=${SQL_PASSWORD}
#       - POSTGRES_DB=${SQL_DATABASE}
#     ports:
#       - ${SQL_PORT}:5432
#     networks:
#       - r-network

  # MySQL DB Service
  # mydb:
  #   image: mysql:5.7
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #     - ${MYSQL_DB_PORT}:3306
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DB_DATABASE}
  #     MYSQL_USER: ${MYSQL_DB_USERNAME}
  #     MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOTPASSWORD}
  #     SERVICE_NAME: mysql
  #     SERVICE_TAGS: dev
  #   volumes:
  #     - r_mysql_data:/var/lib/mysql/
  #     - ./mysql/my.cnf:/etc/mysql/my.cnf
  #   networks:
  #     - r-network

# Docker Networks
networks:
  r-network:
    driver: bridge

# Save the data when containers are shut down
# volumes:
#   r_postgres_data:
#   r_mysql_data: